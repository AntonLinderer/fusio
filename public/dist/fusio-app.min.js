/*
 fusio
 Copyright (C) 2015 Christoph Kappestein
 License: AGPLv3
*/
"use strict";function guessFusioEndpointUrl(){for(var url=window.location.href,removePart=function(url,sign){var count=(url.match(/\//g)||[]).length,pos=url.lastIndexOf(sign);return count>2&&-1!==pos?url.substring(0,pos):url},parts=["#","?","/"],i=0;i<parts.length;i++)url=removePart(url,parts[i]);return url+"/index.php/"}var fusioApp=angular.module("fusioApp",["ngRoute","ngSanitize","ui.bootstrap","ui.ace","chart.js","ng-showdown","fusioApp.account","fusioApp.action","fusioApp.app","fusioApp.connection","fusioApp.dashboard","fusioApp.import","fusioApp.log","fusioApp.login","fusioApp.logout","fusioApp.routes","fusioApp.schema","fusioApp.scope","fusioApp.statistic","fusioApp.user"]);if(fusioApp.factory("fusioIsAuthenticated",["$location","$window","$q",function($location,$window,$q){return{responseError:function(response){return 400==response.status&&response.data.message&&-1!==response.data.message.indexOf("Invalid access token")&&($window.sessionStorage.removeItem("fusio_access_token"),$location.path("/login")),$q.reject(response)}}}]),fusioApp.config(["$routeProvider",function($routeProvider){$routeProvider.otherwise({redirectTo:"/dashboard"})}]),fusioApp.config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("fusioIsAuthenticated")}]),fusioApp.config(["$showdownProvider",function($showdownProvider){}]),fusioApp.run(function($rootScope,$window,$location,$http,helpLoader){var token=$window.sessionStorage.getItem("fusio_access_token");token?($http.defaults.headers.common.Authorization="Bearer "+token,angular.element(document.querySelector("body")).removeClass("fusio-hidden")):$location.path("/login"),$rootScope.help=helpLoader}),"undefined"==typeof fusio_url)var fusio_url=guessFusioEndpointUrl();angular.module("fusioApp.account",["ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/account/change_password",{templateUrl:"app/account/change_password.html",controller:"ChangePasswordCtrl"})}]).controller("ChangePasswordCtrl",["$scope","$http",function($scope,$http){$scope.account={oldPassword:"",newPassword:"",verifyPassword:""},$scope.updatePassword=function(){$http.put(fusio_url+"backend/account/change_password",$scope.account).success(function(data){$scope.response=data}).error(function(data){$scope.response=data})},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.login",["ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/login",{templateUrl:"app/login/index.html",controller:"LoginCtrl"})}]).controller("LoginCtrl",["$scope","$http","$location","$window",function($scope,$http,$location,$window){$scope.credentials={username:"",password:""},$scope.response=null,$scope.loading=!1,$scope.login=function(credentials){$scope.loading=!0;var req={method:"POST",url:fusio_url+"backend/token",headers:{authorization:"Basic "+btoa(credentials.username+":"+credentials.password)},data:"grant_type=client_credentials"};$http(req).success(function(data){$scope.loading=!1,data.access_token?($http.defaults.headers.common.Authorization="Bearer "+data.access_token,$window.sessionStorage.setItem("fusio_access_token",data.access_token),$location.path("/dashboard"),angular.element(document.querySelector(".fusio-login")).css("display","none"),angular.element(document.querySelector("body")).removeClass("fusio-hidden")):$scope.response=data.error_description?data.error_description:"Authentication failed"}).error(function(data){$scope.loading=!1,$scope.response=data.error_description?data.error_description:"Authentication failed"})}}]),angular.module("fusioApp.logout",["ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/logout",{templateUrl:"app/logout/index.html",controller:"LogoutCtrl"})}]).controller("LogoutCtrl",["$scope","$http","$location","$window",function($scope,$http,$location,$window){var removeToken=function(){delete $http.defaults.headers.common.Authorization,$window.sessionStorage.removeItem("fusio_access_token"),$location.path("/login")};$http.post(fusio_url+"authorization/revoke",null).success(removeToken).error(removeToken)}]),angular.module("fusioApp.dashboard",["ngRoute","chart.js"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/dashboard",{templateUrl:"app/dashboard/index.html",controller:"DashboardCtrl"})}]).controller("DashboardCtrl",["$scope","$http","$modal",function($scope,$http,$modal){var from=new Date;from.setDate(from.getDate()-9);var to=new Date,query="?from="+from.toISOString()+"&to="+to.toISOString();$http.get(fusio_url+"backend/statistic/incoming_requests"+query).success(function(data){$scope.incomingRequests=data}),$http.get(fusio_url+"backend/statistic/most_used_routes"+query).success(function(data){$scope.mostUsedRoutes=data}),$http.get(fusio_url+"backend/statistic/most_used_apps"+query).success(function(data){$scope.mostUsedApps=data}),$http.get(fusio_url+"backend/dashboard/latest_requests").success(function(data){$scope.latestRequests=data.entry}),$http.get(fusio_url+"backend/dashboard/latest_apps").success(function(data){$scope.latestApps=data.entry}),$http.get(fusio_url+"backend/statistic/errors_per_route"+query).success(function(data){$scope.errorsPerRoute=data})}]),angular.module("fusioApp.routes",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/routes",{templateUrl:"app/routes/index.html",controller:"RoutesCtrl"})}]).controller("RoutesCtrl",["$scope","$http","$modal","$routeParams",function($scope,$http,$modal){$scope.response=null,$scope.search="",$scope.load=function(){var search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/routes?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.routes=data.entry})},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/routes?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.routes=data.entry})},$scope.doSearch=function(search){var search=encodeURIComponent(search);$http.get(fusio_url+"backend/routes?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.routes=data.entry})},$scope.openCreateDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/routes/create.html",controller:"RoutesCreateCtrl"});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openUpdateDialog=function(route){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/routes/update.html",controller:"RoutesUpdateCtrl",resolve:{route:function(){return route}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openDeleteDialog=function(route){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/routes/delete.html",controller:"RoutesDeleteCtrl",resolve:{route:function(){return route}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.closeResponse=function(){$scope.response=null},$scope.load()}]).controller("RoutesCreateCtrl",["$scope","$http","$modalInstance",function($scope,$http,$modalInstance){$scope.route={methods:"GET|POST|PUT|DELETE",path:"",config:[]},$scope.methods=["GET","POST","PUT","DELETE"],$scope.schemas=[],$scope.actions=[],$scope.statuuus=[{key:4,value:"Development"},{key:1,value:"Production"},{key:2,value:"Deprecated"},{key:3,value:"Closed"}],$scope.create=function(route){$http.post(fusio_url+"backend/routes",route).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$http.get(fusio_url+"backend/action").success(function(data){$scope.actions=data.entry}),$http.get(fusio_url+"backend/schema").success(function(data){$scope.schemas=data.entry}),$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.addVersion=function(){for(var versions=[],i=0;i<$scope.route.config.length;i++){var version=$scope.route.config[i];version.active=!1,versions.push(version)}versions.push($scope.newVersion()),$scope.route.config=versions},$scope.removeVersion=function(version){for(var versions=[],i=0;i<$scope.route.config.length;i++)$scope.route.config[i].name!=version.name&&versions.push($scope.route.config[i]);$scope.route.config=versions},$scope.newVersion=function(){for(var version={name:""+($scope.getLatestVersion()+1),active:!0,status:4,methods:[]},i=0;i<$scope.methods.length;i++)version.methods.push({name:$scope.methods[i]});return version},$scope.getLatestVersion=function(){for(var version=0,i=0;i<$scope.route.config.length;i++){var ver=parseInt($scope.route.config[i].name);ver>version&&(version=ver)}return version},$scope.addVersion()}]).controller("RoutesUpdateCtrl",["$scope","$http","$modalInstance","route",function($scope,$http,$modalInstance,route){$scope.route=route,$scope.methods=["GET","POST","PUT","DELETE"],$scope.schemas=[],$scope.actions=[],$scope.statuuus=[{key:4,value:"Development"},{key:1,value:"Production"},{key:2,value:"Deprecated"},{key:3,value:"Closed"}],$scope.update=function(route){$http.put(fusio_url+"backend/routes/"+route.id,route).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$http.get(fusio_url+"backend/routes/"+route.id).success(function(data){$scope.route=data}),$http.get(fusio_url+"backend/action").success(function(data){$scope.actions=data.entry}),$http.get(fusio_url+"backend/schema").success(function(data){$scope.schemas=data.entry}),$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.addVersion=function(){for(var versions=[],i=0;i<$scope.route.config.length;i++){var version=$scope.route.config[i];version.active=!1,versions.push(version)}versions.push($scope.newVersion()),$scope.route.config=versions},$scope.removeVersion=function(version){for(var versions=[],i=0;i<$scope.route.config.length;i++)$scope.route.config[i].name!=version.name&&versions.push($scope.route.config[i]);$scope.route.config=versions},$scope.newVersion=function(){for(var version={name:""+($scope.getLatestVersion()+1),active:!0,status:4,methods:[]},i=0;i<$scope.methods.length;i++)version.methods.push({name:$scope.methods[i]});return version},$scope.getLatestVersion=function(){for(var version=0,i=0;i<$scope.route.config.length;i++){var ver=parseInt($scope.route.config[i].name);ver>version&&(version=ver)}return version}}]).controller("RoutesDeleteCtrl",["$scope","$http","$modalInstance","route",function($scope,$http,$modalInstance,route){$scope.route=route,$scope["delete"]=function(route){$http["delete"](fusio_url+"backend/routes/"+route.id).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.schema",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/schema",{templateUrl:"app/schema/index.html",controller:"SchemaCtrl"})}]).controller("SchemaCtrl",["$scope","$http","$modal","$routeParams","$location",function($scope,$http,$modal,$routeParams,$location){$scope.response=null,$scope.search="",$scope.routes,$scope.routeId=parseInt($routeParams.routeId),$scope.load=function(){var search=encodeURIComponent($scope.search),routeId=$scope.routeId;$http.get(fusio_url+"backend/schema?search="+search+"&routeId="+routeId).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.schemas=data.entry})},$scope.loadRoutes=function(){$http.get(fusio_url+"backend/routes").success(function(data){$scope.routes=data.entry})},$scope.changeRoute=function(){$location.search("routeId",$scope.routeId)},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/schema?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.schemas=data.entry})},$scope.doSearch=function(search){var search=encodeURIComponent(search),routeId=$scope.routeId;$http.get(fusio_url+"backend/schema?search="+search+"&routeId="+routeId).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.schemas=data.entry})},$scope.openCreateDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/schema/create.html",controller:"SchemaCreateCtrl"});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openUpdateDialog=function(schema){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/schema/update.html",controller:"SchemaUpdateCtrl",resolve:{schema:function(){return schema}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openDeleteDialog=function(schema){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/schema/delete.html",controller:"SchemaDeleteCtrl",resolve:{schema:function(){return schema}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.closeResponse=function(){$scope.response=null},$scope.load(),$scope.loadRoutes()}]).controller("SchemaCreateCtrl",["$scope","$http","$modalInstance",function($scope,$http,$modalInstance){$scope.schema={name:"",source:""},$scope.create=function(schema){$http.post(fusio_url+"backend/schema",schema).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]).controller("SchemaUpdateCtrl",["$scope","$http","$modalInstance","$modal","schema",function($scope,$http,$modalInstance,$modal,schema){$scope.schema=schema,$scope.update=function(schema){$http.put(fusio_url+"backend/schema/"+schema.id,schema).success(function(data){$scope.response=data,data.success===!0&&$scope.loadPreview(schema.id)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.loadPreview=function(schemaId){$http.get(fusio_url+"backend/schema/preview/"+schemaId).success(function(data){$scope.preview=data})},$http.get(fusio_url+"backend/schema/"+schema.id).success(function(data){$scope.schema=data})}]).controller("SchemaDeleteCtrl",["$scope","$http","$modalInstance","schema",function($scope,$http,$modalInstance,schema){$scope.schema=schema,$scope["delete"]=function(schema){$http["delete"](fusio_url+"backend/schema/"+schema.id).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.action",["ngRoute","ui.ace"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/action",{templateUrl:"app/action/index.html",controller:"ActionCtrl"})}]).controller("ActionCtrl",["$scope","$http","$modal","$routeParams","$location",function($scope,$http,$modal,$routeParams,$location){$scope.response=null,$scope.search="",$scope.routes,$scope.routeId=parseInt($routeParams.routeId),$scope.load=function(){var search=encodeURIComponent($scope.search),routeId=$scope.routeId;$http.get(fusio_url+"backend/action?search="+search+"&routeId="+routeId).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.actions=data.entry})},$scope.loadRoutes=function(){$http.get(fusio_url+"backend/routes").success(function(data){$scope.routes=data.entry})},$scope.changeRoute=function(){$location.search("routeId",$scope.routeId)},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/action?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.actions=data.entry})},$scope.doSearch=function(search){var search=encodeURIComponent(search),routeId=$scope.routeId;$http.get(fusio_url+"backend/action?search="+search+"&routeId="+routeId).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.actions=data.entry})},$scope.openCreateDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/action/create.html",controller:"ActionCreateCtrl"});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openUpdateDialog=function(action){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/action/update.html",controller:"ActionUpdateCtrl",resolve:{action:function(){return action}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openDeleteDialog=function(action){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/action/delete.html",controller:"ActionDeleteCtrl",resolve:{action:function(){return action}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.closeResponse=function(){$scope.response=null},$scope.load(),$scope.loadRoutes()}]).controller("ActionCreateCtrl",["$scope","$http","$modalInstance","formBuilder",function($scope,$http,$modalInstance,formBuilder){$scope.action={name:"","class":"",config:{}},$scope.actions=[],$scope.create=function(action){$http.post(fusio_url+"backend/action",action).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$http.get(fusio_url+"backend/action/list").success(function(data){$scope.actions=data.actions,data.actions[0]&&($scope.action["class"]=data.actions[0]["class"],$scope.loadConfig())}),$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.loadConfig=function(){$scope.action["class"]&&$http.get(fusio_url+"backend/action/form?class="+encodeURIComponent($scope.action["class"])).success(function(data){var linkFn=formBuilder.buildHtml(data.element,"action.config"),el=linkFn($scope),containerEl=angular.element(document.querySelector("#config-form"));containerEl.children().remove(),containerEl.append(el)})}}]).controller("ActionUpdateCtrl",["$scope","$http","$modalInstance","action","formBuilder","$timeout",function($scope,$http,$modalInstance,action,formBuilder,$timeout){$scope.action=action,$scope.actions=[],$scope.update=function(action){$http.put(fusio_url+"backend/action/"+action.id,action).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.loadConfig=function(){$scope.action["class"]&&$http.get(fusio_url+"backend/action/form?class="+encodeURIComponent($scope.action["class"])).success(function(data){var linkFn=formBuilder.buildHtml(data.element,"action.config"),el=linkFn($scope),containerEl=angular.element(document.querySelector("#config-form"));containerEl.children().remove(),containerEl.append(el)})},$http.get(fusio_url+"backend/action/"+action.id).success(function(data){angular.isArray(data.config)&&(data.config={}),$scope.action=data,$scope.loadConfig()})}]).controller("ActionDeleteCtrl",["$scope","$http","$modalInstance","action",function($scope,$http,$modalInstance,action){$scope.action=action,$scope["delete"]=function(action){$http["delete"](fusio_url+"backend/action/"+action.id).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.connection",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/connection",{templateUrl:"app/connection/index.html",controller:"ConnectionCtrl"})}]).controller("ConnectionCtrl",["$scope","$http","$modal",function($scope,$http,$modal){$scope.response=null,$scope.search="",$scope.load=function(){var search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/connection?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.connections=data.entry})},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/connection?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.connections=data.entry})},$scope.doSearch=function(search){var search=encodeURIComponent(search);$http.get(fusio_url+"backend/connection?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.connections=data.entry})},$scope.openCreateDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/connection/create.html",controller:"ConnectionCreateCtrl"});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openUpdateDialog=function(connection){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/connection/update.html",controller:"ConnectionUpdateCtrl",resolve:{connection:function(){return connection}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openDeleteDialog=function(connection){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/connection/delete.html",controller:"ConnectionDeleteCtrl",resolve:{connection:function(){return connection}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.closeResponse=function(){$scope.response=null},$scope.load()}]).controller("ConnectionCreateCtrl",["$scope","$http","$modalInstance","formBuilder",function($scope,$http,$modalInstance,formBuilder){$scope.connection={name:"","class":"",config:{}},$scope.connections=[],$scope.create=function(connection){$http.post(fusio_url+"backend/connection",connection).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$http.get(fusio_url+"backend/connection/list").success(function(data){$scope.connections=data.connections,data.connections[0]&&($scope.connection["class"]=data.connections[0]["class"],$scope.loadConfig())}),$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.loadConfig=function(){$scope.connection["class"]&&$http.get(fusio_url+"backend/connection/form?class="+encodeURIComponent($scope.connection["class"])).success(function(data){var containerEl=angular.element(document.querySelector("#config-form"));containerEl.children().remove();var linkFn=formBuilder.buildHtml(data.element,"connection.config");if(angular.isFunction(linkFn)){var el=linkFn($scope);containerEl.append(el)}})}}]).controller("ConnectionUpdateCtrl",["$scope","$http","$modalInstance","formBuilder","connection",function($scope,$http,$modalInstance,formBuilder,connection){angular.isArray(connection.config)&&(connection.config={}),$scope.connection=connection,$scope.connections=[],$scope.update=function(connection){$http.put(fusio_url+"backend/connection/"+connection.id,connection).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.loadConfig=function(){$scope.connection["class"]&&$http.get(fusio_url+"backend/connection/form?class="+encodeURIComponent($scope.connection["class"])).success(function(data){var containerEl=angular.element(document.querySelector("#config-form"));containerEl.children().remove();var linkFn=formBuilder.buildHtml(data.element,"connection.config");if(angular.isFunction(linkFn)){var el=linkFn($scope);containerEl.append(el)}})},$http.get(fusio_url+"backend/connection/"+connection.id).success(function(data){$scope.connection=data,$scope.loadConfig()})}]).controller("ConnectionDeleteCtrl",["$scope","$http","$modalInstance","connection",function($scope,$http,$modalInstance,connection){$scope.connection=connection,$scope["delete"]=function(connection){$http["delete"](fusio_url+"backend/connection/"+connection.id).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.import",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/import",{templateUrl:"app/import/index.html",controller:"ImportCtrl"})}]).controller("ImportCtrl",["$scope","$http","$modal",function($scope,$http,$modal){$scope.source,$scope.error,$scope.success=!1,$scope.transform=function(source){$http.post(fusio_url+"backend/import/raml",{schema:source}).success(function(data){return"success"in data&&data.success===!1?void($scope.error=data.message):($scope.error=null,void $scope.openPreviewDialog(data))}).error(function(data){"success"in data&&data.success===!1?$scope.error=data.message:$scope.error="An unknown error occured"})},$scope.openPreviewDialog=function(data){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/import/preview.html",controller:"ImportPreviewCtrl",resolve:{data:function(){return data}}});modalInstance.result.then(function(response){$scope.success=!0},function(){})}}]).controller("ImportPreviewCtrl",["$scope","$http","$modalInstance","$modal","data",function($scope,$http,$modalInstance,$modal,data){$scope.data=data,$scope.doProcess=function(){$http.post(fusio_url+"backend/import/process",data).success(function(data){return"success"in data&&data.success===!1?void($scope.error=data.message):($scope.error=null,void $modalInstance.close())}).error(function(data){"success"in data&&data.success===!1?$scope.error=data.message:$scope.error="An unknown error occured"})},$scope.openRouteDialog=function(route){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/import/route.html",controller:"ImportRouteCtrl",resolve:{route:function(){return route}}});modalInstance.result.then(function(response){},function(){})},$scope.openSchemaDialog=function(schema){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/import/schema.html",controller:"ImportSchemaCtrl",resolve:{schema:function(){return schema}}});modalInstance.result.then(function(response){},function(){})},$scope.close=function(){$modalInstance.dismiss("cancel")}}]).controller("ImportRouteCtrl",["$scope","$http","$modalInstance","route",function($scope,$http,$modalInstance,route){$scope.route=route,$scope.statuuus=[{key:4,value:"Development"},{key:1,value:"Production"},{key:2,value:"Deprecated"},{key:3,value:"Closed"}],$scope.close=function(){$modalInstance.dismiss("cancel")}}]).controller("ImportSchemaCtrl",["$scope","$http","$modalInstance","schema",function($scope,$http,$modalInstance,schema){$scope.schema=schema,$scope.close=function(){$modalInstance.dismiss("cancel")}}]),angular.module("fusioApp.app",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/app",{templateUrl:"app/app/index.html",controller:"AppCtrl"})}]).controller("AppCtrl",["$scope","$http","$modal",function($scope,$http,$modal){$scope.response=null,$scope.search="",$scope.load=function(){var search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/app?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.apps=data.entry})},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/app?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.apps=data.entry})},$scope.doSearch=function(search){var search=encodeURIComponent(search);$http.get(fusio_url+"backend/app?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.apps=data.entry})},$scope.openCreateDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/app/create.html",controller:"AppCreateCtrl"});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openUpdateDialog=function(app){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/app/update.html",controller:"AppUpdateCtrl",resolve:{app:function(){return app}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openDeleteDialog=function(app){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/app/delete.html",controller:"AppDeleteCtrl",resolve:{app:function(){return app}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.closeResponse=function(){$scope.response=null},$scope.load()}]).controller("AppCreateCtrl",["$scope","$http","$modalInstance",function($scope,$http,$modalInstance){$scope.app={status:1,name:"",url:""},$scope.states=[{key:1,value:"Active"},{key:2,value:"Pending"},{key:3,value:"Deactivated"}],$scope.create=function(app){$http.post(fusio_url+"backend/app",app).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.getUsers=function(name){return $http.get(fusio_url+"backend/user?search="+encodeURIComponent(name)).then(function(response){return angular.isArray(response.data.entry)?response.data.entry:[]})}}]).controller("AppUpdateCtrl",["$scope","$http","$modalInstance","app",function($scope,$http,$modalInstance,app){$scope.app=app,$scope.states=[{key:1,value:"Active"},{key:2,value:"Pending"},{key:3,value:"Deactivated"}],$http.get(fusio_url+"backend/scope?count=1024").success(function(data){$scope.scopes=data.entry,$scope.loadApp()}),$scope.update=function(app){app.tokens&&delete app.tokens,$http.put(fusio_url+"backend/app/"+app.id,app).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.loadApp=function(){$http.get(fusio_url+"backend/app/"+app.id).success(function(data){var scopes=[];if(angular.isArray(data.scopes))for(var i=0;i<$scope.scopes.length;i++){for(var found=null,j=0;j<data.scopes.length;j++)if($scope.scopes[i].name==data.scopes[j]){found=$scope.scopes[i].name;break}scopes.push(found)}data.scopes=scopes,$scope.app=data})},$scope.removeToken=function(token){$http["delete"](fusio_url+"backend/app/"+app.id+"/token/"+token.id).success(function(data){if($scope.app.tokens){for(var tokens=[],i=0;i<$scope.app.tokens.length;i++)if($scope.app.tokens[i].id!=token.id){tokens.push($scope.app.tokens[i]);
break}$scope.app.tokens=tokens}})}}]).controller("AppDeleteCtrl",["$scope","$http","$modalInstance","app",function($scope,$http,$modalInstance,app){$scope.app=app,$scope["delete"]=function(app){$http["delete"](fusio_url+"backend/app/"+app.id).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.log",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/log",{templateUrl:"app/log/index.html",controller:"LogCtrl"})}]).controller("LogCtrl",["$scope","$http","$modal",function($scope,$http,$modal){var from=new Date;from.setMonth(from.getMonth()-1);var to=new Date;$scope.search="",$scope.filter={from:from,to:to},$scope.routes=[],$scope.apps=[],$scope.load=function(){var search="";$scope.search&&(search=encodeURIComponent($scope.search)),$http.get(fusio_url+"backend/log?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.logs=data.entry})},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/log?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.logs=data.entry})},$scope.doFilter=function(){var query="";for(var key in $scope.filter)if($scope.filter[key]){var value;value=$scope.filter[key]instanceof Date?$scope.filter[key].toISOString():$scope.filter[key],query+=key+"="+encodeURIComponent(value)+"&"}$http.get(fusio_url+"backend/log?"+query).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.logs=data.entry})},$scope.openDetailDialog=function(log){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/log/detail.html",controller:"LogDetailCtrl",resolve:{log:function(){return log}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load(),$timeout(function(){$scope.response=null},2e3)},function(){})},$scope.openFilterDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/statistic/filter.html",controller:"StatisticFilterCtrl",resolve:{filter:function(){return $scope.filter}}});modalInstance.result.then(function(filter){$scope.filter=filter,$scope.doFilter()},function(){})},$scope.load()}]).controller("LogDetailCtrl",["$scope","$http","$modal","$modalInstance","log",function($scope,$http,$modal,$modalInstance,log){$scope.log=log,$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.openTraceDialog=function(error){$modal.open({size:"md",backdrop:"static",template:'<div class="modal-body"><pre>'+error.trace+"</pre></div>"})},$http.get(fusio_url+"backend/log/"+log.id).success(function(data){$scope.log=data})}]),angular.module("fusioApp.user",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/user",{templateUrl:"app/user/index.html",controller:"UserCtrl"})}]).controller("UserCtrl",["$scope","$http","$modal",function($scope,$http,$modal){$scope.response=null,$scope.search="",$scope.load=function(){var search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/user?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.users=data.entry})},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/user?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.users=data.entry})},$scope.doSearch=function(search){var search=encodeURIComponent(search);$http.get(fusio_url+"backend/user?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.users=data.entry})},$scope.openCreateDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/user/create.html",controller:"UserCreateCtrl"});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openUpdateDialog=function(user){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/user/update.html",controller:"UserUpdateCtrl",resolve:{user:function(){return user}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openDeleteDialog=function(user){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/user/delete.html",controller:"UserDeleteCtrl",resolve:{user:function(){return user}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.closeResponse=function(){$scope.response=null},$scope.load()}]).controller("UserCreateCtrl",["$scope","$http","$modalInstance",function($scope,$http,$modalInstance){$scope.user={status:0,name:"",scopes:[]},$scope.statuuus=[{id:0,name:"Consumer"},{id:1,name:"Administrator"},{id:2,name:"Disabled"}],$scope.scopes=[],$http.get(fusio_url+"backend/scope?count=1024").success(function(data){$scope.scopes=data.entry}),$scope.create=function(user){$http.post(fusio_url+"backend/user",user).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]).controller("UserUpdateCtrl",["$scope","$http","$modalInstance","user",function($scope,$http,$modalInstance,user){$scope.user=user,$scope.statuuus=[{id:0,name:"Consumer"},{id:1,name:"Administrator"},{id:2,name:"Disabled"}],$scope.scopes=[],$http.get(fusio_url+"backend/scope?count=1024").success(function(data){$scope.scopes=data.entry,$scope.loadUser()}),$scope.update=function(user){user.apps&&delete user.apps,$http.put(fusio_url+"backend/user/"+user.id,user).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$scope.loadUser=function(){$http.get(fusio_url+"backend/user/"+user.id).success(function(data){var scopes=[];if(angular.isArray(data.scopes))for(var i=0;i<$scope.scopes.length;i++){for(var found=null,j=0;j<data.scopes.length;j++)if($scope.scopes[i].name==data.scopes[j]){found=$scope.scopes[i].name;break}scopes.push(found)}data.scopes=scopes,$scope.user=data})}}]).controller("UserDeleteCtrl",["$scope","$http","$modalInstance","user",function($scope,$http,$modalInstance,user){$scope.user=user,$scope["delete"]=function(user){$http["delete"](fusio_url+"backend/user/"+user.id).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.scope",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/scope",{templateUrl:"app/scope/index.html",controller:"ScopeCtrl"})}]).controller("ScopeCtrl",["$scope","$http","$modal",function($scope,$http,$modal){$scope.response=null,$scope.search="",$scope.load=function(){var search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/scope?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.scopes=data.entry})},$scope.pageChanged=function(){var startIndex=16*($scope.startIndex-1),search=encodeURIComponent($scope.search);$http.get(fusio_url+"backend/scope?startIndex="+startIndex+"&search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.scopes=data.entry})},$scope.doSearch=function(search){var search=encodeURIComponent(search);$http.get(fusio_url+"backend/scope?search="+search).success(function(data){$scope.totalItems=data.totalItems,$scope.startIndex=0,$scope.scopes=data.entry})},$scope.openCreateDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/scope/create.html",controller:"ScopeCreateCtrl"});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openUpdateDialog=function(scope){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/scope/update.html",controller:"ScopeUpdateCtrl",resolve:{scope:function(){return scope}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.openDeleteDialog=function(scope){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/scope/delete.html",controller:"ScopeDeleteCtrl",resolve:{scope:function(){return scope}}});modalInstance.result.then(function(response){$scope.response=response,$scope.load()},function(){})},$scope.closeResponse=function(){$scope.response=null},$scope.load()}]).controller("ScopeCreateCtrl",["$scope","$http","$modalInstance",function($scope,$http,$modalInstance){$scope.scope={name:""},$scope.routes=[],$http.get(fusio_url+"backend/routes?count=1024").success(function(data){$scope.routes=data.entry}),$scope.create=function(scope){for(var routes=[],i=0;i<$scope.routes.length;i++){var methods=[];if($scope.routes[i].allowedMethods)for(var key in $scope.routes[i].allowedMethods)$scope.routes[i].allowedMethods[key]===!0&&methods.push(key.toUpperCase());methods.length>0&&routes.push({routeId:$scope.routes[i].id,allow:!0,methods:methods.join("|")})}scope.routes=routes,$http.post(fusio_url+"backend/scope",scope).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]).controller("ScopeUpdateCtrl",["$scope","$http","$modalInstance","scope",function($scope,$http,$modalInstance,scope){$scope.scope=scope,$scope.routes=[],$scope.loadRoutes=function(){$http.get(fusio_url+"backend/routes?count=1024").success(function(data){for(var routes=[],i=0;i<data.entry.length;i++){var route=data.entry[i];if($scope.scope.routes)for(var j=0;j<$scope.scope.routes.length;j++)if($scope.scope.routes[j].routeId==route.id){var methods=[];$scope.scope.routes[j].methods&&(methods=$scope.scope.routes[j].methods.split("|"));for(var allowedMethods={},k=0;k<methods.length;k++)allowedMethods[methods[k].toLowerCase()]=!0;route.allow=$scope.scope.routes[j].allow?!0:!1,route.allowedMethods=allowedMethods}routes.push(route)}$scope.routes=routes})},$scope.update=function(scope){var routes=[];if($scope.routes)for(var i=0;i<$scope.routes.length;i++){var methods=[];if($scope.routes[i].allowedMethods)for(var key in $scope.routes[i].allowedMethods)$scope.routes[i].allowedMethods[key]===!0&&methods.push(key.toUpperCase());methods.length>0&&routes.push({routeId:$scope.routes[i].id,allow:!0,methods:methods.join("|")})}scope.routes=routes,$http.put(fusio_url+"backend/scope/"+scope.id,scope).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null},$http.get(fusio_url+"backend/scope/"+scope.id).success(function(data){$scope.scope=data,$scope.loadRoutes()})}]).controller("ScopeDeleteCtrl",["$scope","$http","$modalInstance","scope",function($scope,$http,$modalInstance,scope){$scope.scope=scope,$scope["delete"]=function(scope){$http["delete"](fusio_url+"backend/scope/"+scope.id).success(function(data){$scope.response=data,data.success===!0&&$modalInstance.close(data)}).error(function(data){$scope.response=data})},$scope.close=function(){$modalInstance.dismiss("cancel")},$scope.closeResponse=function(){$scope.response=null}}]),angular.module("fusioApp.statistic",["ngRoute","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/statistic",{templateUrl:"app/statistic/index.html",controller:"StatisticCtrl"})}]).controller("StatisticCtrl",["$scope","$http","$modal","$compile",function($scope,$http,$modal,$compile){var from=new Date;from.setMonth(from.getMonth()-1);var to=new Date;$scope.filter={from:from,to:to},$scope.chart={},$scope.statistic="incoming_requests",$scope.statistics=[{name:"Incoming requests",value:"incoming_requests"},{name:"Most used routes",value:"most_used_routes"},{name:"Most used apps",value:"most_used_apps"},{name:"Errors per route",value:"errors_per_route"}],$scope.doFilter=function(){var statistic=$scope.statistic?$scope.statistic:"incoming_requests",query="";for(var key in $scope.filter)if($scope.filter[key]){var value;value=$scope.filter[key]instanceof Date?$scope.filter[key].toISOString():$scope.filter[key],query+=key+"="+encodeURIComponent(value)+"&"}$http.get(fusio_url+"backend/statistic/"+statistic+"?"+query).success(function(data){$scope.chart=data})},$scope.openFilterDialog=function(){var modalInstance=$modal.open({size:"lg",backdrop:"static",templateUrl:"app/statistic/filter.html",controller:"StatisticFilterCtrl",resolve:{filter:function(){return $scope.filter}}});modalInstance.result.then(function(filter){$scope.filter=filter,$scope.doFilter()},function(){})},$scope.doFilter()}]).controller("StatisticFilterCtrl",["$scope","$http","$modalInstance","filter",function($scope,$http,$modalInstance,filter){$scope.filter=filter,$scope.doFilter=function(){$modalInstance.close($scope.filter)},$scope.close=function(){$modalInstance.dismiss("cancel")},$http.get(fusio_url+"backend/routes").success(function(data){$scope.routes=data.entry}),$http.get(fusio_url+"backend/app").success(function(data){$scope.apps=data.entry})}]),fusioApp.factory("formBuilder",["$sce","$compile",function($sce,$compile){var builder={};return builder.buildHtml=function(elements,propertyName){if(!elements||!angular.isArray(elements)||0===elements.length)return"";for(var form="<div>",i=0;i<elements.length;i++){var el=elements[i];if(el.name&&el.title){var helpId;if(el.help&&(helpId="help-"+el.name),form+='<div class="form-group">',"http://fusio-project.org/ns/2015/form/textarea"==el.element)form+='<label for="config-'+el.name+'">'+el.title+":</label>",form+="<div ui-ace=\"{mode: '"+el.mode+'\'}" ng-model="'+propertyName+"."+el.name+'" id="config-'+el.name+'" aria-describedby="'+helpId+'"></div>';else if("http://fusio-project.org/ns/2015/form/input"==el.element)form+='<label for="config-'+el.name+'">'+el.title+":</label>",form+='<input type="'+el.type+'" name="config-'+el.name+'" id="config-'+el.name+'" ng-model="'+propertyName+"."+el.name+'" value="'+(el.value?el.value:"")+'" aria-describedby="'+helpId+'" class="form-control" />';else if("http://fusio-project.org/ns/2015/form/select"==el.element){form+='<label for="config-'+el.name+'">'+el.title+":</label>",form+='<select name="config-'+el.name+'" id="config-'+el.name+'" ng-model="'+propertyName+"."+el.name+'" aria-describedby="'+helpId+'" class="form-control">';var options=el.options;if(angular.isArray(options))for(var j=0;j<options.length;j++)form+='<option value="'+options[j].key+'">'+options[j].value+"</option>";form+="</select>"}else form+='<label for="config-'+el.name+'">'+el.title+":</label>",form+='<input type="text" name="config-'+el.name+'" id="config-'+el.name+'" ng-model="'+propertyName+"."+el.name+'" value="'+(el.value?el.value:"")+'" aria-describedby="'+helpId+'" class="form-control" />';el.help&&(form+='<span class="help-block" id="'+helpId+'">'+el.help+"</span>"),form+="</div>"}}return form+="</div>",$compile(form)},builder}]),fusioApp.factory("helpLoader",["$http","$showdown","$q","$modal",function($http,$showdown,$q,$modal){var helper={};return helper.load=function(path){return $q(function(resolve,reject){$http.get(path).success(function(data,status){var parser=document.createElement("a");if(parser.href=path,parser.hash){var heading=parser.hash.substr(1);if(""!=heading){var regexp=new RegExp("(^###\\s"+heading+"$\\s+([\\s\\S]*?))^###\\s","gmi");matches=regexp.exec(data),data=matches&&matches.length>0?matches[1]:"Could not found chapter"}}var html=$showdown.makeHtml(data);html=html.replace(/{{/g,"{<!-- -->{"),html=html.replace(/}}/g,"}<!-- -->}"),resolve(html)}).error(function(data){reject("Could not find help file")})})},helper.showDialog=function(path){this.load(path).then(function(html){$modal.open({size:"md",template:'<div class="modal-body">'+html+"</div>"})},function(html){$modal.open({size:"md",template:'<div class="modal-body"><div class="alert alert-info">'+html+"</div></div>"})})},helper}]);